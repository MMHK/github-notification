<?php
/**
 * Created by PhpStorm.
 * User: mixmedia
 * Date: 2017/3/31
 * Time: 18:46
 */

namespace App\Helper\MM;


use Laravel\Lumen\Application;


class UrlGenerator extends \Laravel\Lumen\Routing\UrlGenerator {

    static protected
        $version = 0;

    protected
        $inCli = false,
        $in_https = false,
        $cdn_config;

    public function __construct(Application $app)
    {
        parent::__construct($app); // TODO: Change the autogenerated stub

        if (array_get($_SERVER, 'HTTP_X_FORWARDED_PROTO') == 'https' || (array_get($_SERVER, 'HTTPS') && array_get($_SERVER, 'HTTPS') != 'off')) {
            $this->in_https = true;
        }

        $this->cdn_config = config('cdn', []);

        /**
         * 兼容 Cli 模式下的host
         */
        $this->inCli = app()->runningInConsole();
        if ($this->inCli) {
            $this->cachedRoot = config('app.url');
        }
    }

    public function setVersion($version) {
        self::$version = $version;
    }

    public function getVersion() {
        return self::$version ? self::$version : false;
    }

    public function asset($path, $secure = null)
    {
        if ($this->isValidUrl($path)) {
            return $path;
        }

        if (is_null($secure) && $this->in_https) {
            $secure = $this->in_https;
        }

        // Once we get the root URL, we will check to see if it contains an index.php
        // file in the paths. If it does, we will remove it since it is not needed
        // for asset paths, but only for routes to endpoints in the application.
        $root = $this->getRootUrl($this->formatScheme($secure));
        if (array_get($this->cdn_config, 'enable')) {
            $root = $this->getRootUrl($this->formatScheme($secure), 'http://'.array_get($this->cdn_config, 'domain'));
        }


        return $this->removeIndex($root).'/'.trim($path, '/') . (self::$version ? '?v='. self::$version : '');
    }

    public function formatScheme($secure)
    {
        if ($this->inCli) {
            return parse_url($this->cachedRoot, PHP_URL_SCHEME).'://';
        }

        return parent::formatScheme($secure); // TODO: Change the autogenerated stub
    }

    /**
     * 处理 UrlGenerator 的增强
     * @param $url string 远程url参数
     * @param array $params array query参数可以覆盖 $url 里面的
     * @param bool $secure bool 是否https链接
     * @return string 处理后url
     */
    public function remote($path,array $params = array(), $secure = false) {
        return URI::macroRemoteURL($path, $params, $secure);
    }

    public function to($path, $extra = [], $secure = null)
    {
        if (is_null($secure)) {
            $secure = $this->in_https;
        }
        return parent::to($path, $extra, $secure); // TODO: Change the autogenerated stub
    }


} 